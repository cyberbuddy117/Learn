/* CSS is cAsE sEnSiTiVe
Can use style attribute within HTML elements or
Can place CSS within style HTML tags or
Can place CSS in external style sheet (most common)
Generic font familys include Monospace, Serif, Sans-Serif
Generic font family names are not case-sensitive and do not need quotes because they are CSS keywords.
multiple class declarations: <p class="class1 class2">
Units of length: px / absolute in or mm / relative em or rem
Highest specificity is to use !important keyword
"CSS Rules" consist of the "selector" and all "declarations"
"Declarations" consist of a "property" and a "value" */
.class { /* can have multiple elements with same class, higher specificity than HTML element selectors */
  color: #0000FF;
}
#id { /* higher specificity than classes, but inline html styles override ID's, only use each ID once */
  color: #F00;
}
.class1 .class2 {
  color: rgb(255, 255, 255) !important; /* highest specificity, even overrides inline styles */
}
.class1 h1 { /* nested */
  color: transparent;
}
h1.special { /* chaining h1 elements that have special class */
  color: rgb(255, 0, 0);
}
h1, .menu { /* multiple selectors */
  margin: 0;
}
.btn:hover, .nav ul li:hover {
  cursor: pointer;
  list-style: none;
}
[type='radio'] { /* [attr=value] */
  margin: 20px 0px;
}
* {
  font-family: Arial;
}
a:hover {
  color="blue";
}
@media (min-width: 850px) {
  .header h1 {
    font-size: 120px;
  }
}
p { /* **** FlexBox START **** */
  align-items: flex-start; /* aligns vertically => flex-end, center, baseline, stretch */
  justify-content: flex-start; /* aligns horizontally => flex-end, center, space-between, space-around */

} /* **** FlexBox END **** */
p {
  background: url(http://images.com/image.jpg) no-repeat center center;
    /* Old browsers */
    background: #141E30;
    /* Chrome 10-25, Safari 5.1-6 */
    background: -webkit-linear-gradient(-45deg, #35577D, #141E30);
    /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
    background: linear-gradient(-45deg, #35577D, #141E30);
    background: repeating-linear-gradient();
  background-color: silver; /* background */
  background-image: url("https://codecademy.com/image1.png");
  background-position: center;
  background-size: cover;
  border-color: red;
  border-radius: 50%;
  border-style: solid;
  border-width: 5px;
  bottom: 0px;
  box-shadow: 0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23);/* alpha 0 is invisible
  5 values are: offset-x, offset-y, blur-radius*, spread-radius*, color [* = optional] */
  color: hsl(); /* forground, hue, saturation, lightness */
    color: hsl(0, 100%, 50%); /* red */
    color: hsl(60, 100%, 50%); /* yellow */
    color: hsl(120, 100%, 50%); /* green */
    color: hsl(180, 100%, 50%); /* cyan */
    color: hsl(240, 100%, 50%); /* blue */
    color: hsl(300, 100%, 50%); /* magenta */
    /* hue = color, saturation = gray (100% = no grey), lightness = black (0%) or white (100%), 50% is normal */
  content: ""; /* must be defined for :before and :after, usually photo or text, but for shapes set to empty string "" */
  cursor: pointer;
  display: block;
  float: left; /* removes from normal flow, moved to left or right of containing element, commonly used with width: */
  font-family: Helvetica, Monospace; /* default is Times New Roman */
  font-size: 30px;
  font-style: italic; /* same as <em> */
  font-weight: 100; /* bold is same as <strong> */
  height: 800px;
  left: 0px;
  letter-spacing: 8px;
  line-height: 100px;
  list-style: none; /* square */
  margin: 5px 6px 7px 8px; /* margin-top/right/bottom/left, margin: auto; to center block elements horizontally, can also center images (inline but can sitcho) */
    margin: 0;
  max-width: 940px;
  opacity: 0.5; /* 0 to 1 for 0% to 100%, applies to entire element */
  padding: 5px 6px 7px 8px; /* padding-top/right/bottom/left */
  position: relative; /* moves relative to it's position in the normal flow using left, right, top, bottom (px, %, em) */
  position: absolute; /* removes from normal flow, locks in place relative to closest 'positioned' parent container (up to body), need, normally position: relative on parent container */
  position: fixed; /* removes from normal flow, locks relative to browser window, does not move when scrolling */
  right: 0px;
  text-align: center; /* justify */
  text-decoration: none; /* underline is same as <u>, line-through same as <del> */
  text-transform: uppercase; /* lowercase, capitalize, initial, inherit, none */
  top: 20px;
  transform: scale(1.5); /* skewX(-32deg); skewY(10deg); */
  transition: background .5s;
  width: 30px; /* 100%, em */
  z-index: 1; /* later html itmes appear on top, highest # is on top */
}
